''
'''
import:
    在python中一个py文件就是一个模块
    导入模块时会通过py文件名得到一个模块对象 文件名就是对象名
    通过模块名得到该模块的成员(类,变量,函数)
    创建模块时不建议使用中文字符
form:
    使用了form导入时相当于将导入的内容 '复制'了一份到本地文件中
    没有import 的就没有导入进来
    如果想导入全部的内容 可以用通配符'*'来导入
    命名冲突解决办法:使用别名进行区分
'''



'''
        模块在导入中去依照sys模块中的path变量中记录的路径去查找 
        sys.path返回的是一个列表 可以临时添加
        如果path路径中没找到 就无法导入
'''
import sys
print(sys.path) #这是一个列表
'''
        导入文件的顺序:
            1.在当前程序所在文件夹的目录下找
            2.当前程序所在的工程目录下找
            3.PYTHON_PATH
            4.系统标准库目录
            5.第三方库目录
'''



'''
        __all__
            使from...import...有导入的限制
            
        在模块文件的头部定义  __all__ = [obj1,obj2......]   则只能导入obj1,obj2...定义过的模块
        __all__是一个列表    公开的obj以字符串的形式保存进去
'''




'''
        一个.py文件就是一个模块   
        一个项目中会有很多模块
        为了管理这些文件 会建立文件夹进行分类
        __init__文件:
            import整个包的时候会去__init__文件中导入权限
            form . import obj
            从'.'当前目录导入指定obj
            ''
                在__init__文件中也可以使用__all__来控制公开的模块
            ''
'''
